{"version":3,"names":["NativeModules","Platform","TboxSecureStorageModule","RNSecureStorage","ACCESSIBLE","WHEN_UNLOCKED","AFTER_FIRST_UNLOCK","ALWAYS","WHEN_PASSCODE_SET_THIS_DEVICE_ONLY","WHEN_UNLOCKED_THIS_DEVICE_ONLY","AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY","ALWAYS_THIS_DEVICE_ONLY","ACCESS_CONTROL","USER_PRESENCE","BIOMETRY_ANY","BIOMETRY_CURRENT_SET","DEVICE_PASSCODE","APPLICATION_PASSWORD","BIOMETRY_ANY_OR_DEVICE_PASSCODE","BIOMETRY_CURRENT_SET_OR_DEVICE_PASSCODE","AUTHENTICATION_TYPE","DEVICE_PASSCODE_OR_BIOMETRICS","BIOMETRICS","BIOMETRY_TYPE","TOUCH_ID","FACE_ID","FINGERPRINT","isAndroid","OS","defaultOptions","accessControl","accessible","accessGroup","authenticationPrompt","service","authenticateType","TboxSecureStorage","getItem","key","options","finalOptions","setItem","value","removeItem","getAllKeys","getSupportedBiometryType","canCheckAuthentication"],"sources":["secureStorage.tsx"],"sourcesContent":["import { NativeModules, Platform } from 'react-native';\n\nconst { TboxSecureStorageModule: RNSecureStorage } = NativeModules;\n\nexport const ACCESSIBLE = {\n  WHEN_UNLOCKED: 'AccessibleWhenUnlocked',\n  AFTER_FIRST_UNLOCK: 'AccessibleAfterFirstUnlock',\n  ALWAYS: 'AccessibleAlways',\n  WHEN_PASSCODE_SET_THIS_DEVICE_ONLY: 'AccessibleWhenPasscodeSetThisDeviceOnly',\n  WHEN_UNLOCKED_THIS_DEVICE_ONLY: 'AccessibleWhenUnlockedThisDeviceOnly',\n  AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY:\n    'AccessibleAfterFirstUnlockThisDeviceOnly',\n  ALWAYS_THIS_DEVICE_ONLY: 'AccessibleAlwaysThisDeviceOnly',\n};\n\nexport const ACCESS_CONTROL = {\n  USER_PRESENCE: 'UserPresence',\n  BIOMETRY_ANY: 'BiometryAny',\n  BIOMETRY_CURRENT_SET: 'BiometryCurrentSet',\n  DEVICE_PASSCODE: 'DevicePasscode',\n  APPLICATION_PASSWORD: 'ApplicationPassword',\n  BIOMETRY_ANY_OR_DEVICE_PASSCODE: 'BiometryAnyOrDevicePasscode',\n  BIOMETRY_CURRENT_SET_OR_DEVICE_PASSCODE: 'BiometryCurrentSetOrDevicePasscode',\n};\n\nexport const AUTHENTICATION_TYPE = {\n  DEVICE_PASSCODE_OR_BIOMETRICS: 'AuthenticationWithBiometricsDevicePasscode',\n  BIOMETRICS: 'AuthenticationWithBiometrics',\n};\n\nexport const BIOMETRY_TYPE = {\n  TOUCH_ID: 'TouchID',\n  FACE_ID: 'FaceID',\n  FINGERPRINT: 'Fingerprint',\n};\n\nconst isAndroid = Platform.OS === 'android';\n\nconst defaultOptions = {\n  accessControl: null,\n  accessible: ACCESSIBLE.WHEN_UNLOCKED,\n  accessGroup: null,\n  authenticationPrompt: 'Authenticate to retrieve secret data',\n  service: null,\n  authenticateType: AUTHENTICATION_TYPE.DEVICE_PASSCODE_OR_BIOMETRICS,\n};\n\nexport const TboxSecureStorage = {\n  ACCESSIBLE,\n  ACCESS_CONTROL,\n  AUTHENTICATION_TYPE,\n  BIOMETRY_TYPE,\n\n  getItem(key: string, options: any) {\n    const finalOptions = {\n      ...defaultOptions,\n      ...options,\n    };\n    return RNSecureStorage.getItem(key, finalOptions);\n  },\n  setItem(key: string, value: string, options: any) {\n    const finalOptions = {\n      ...defaultOptions,\n      ...options,\n    };\n    return RNSecureStorage.setItem(key, value, finalOptions);\n  },\n  removeItem(key: string, options: any) {\n    const finalOptions = {\n      ...defaultOptions,\n      ...options,\n    };\n    if (isAndroid) {\n      return RNSecureStorage.removeItem(key, finalOptions.service);\n    }\n    return RNSecureStorage.removeItem(key, finalOptions);\n  },\n  getAllKeys(options: any) {\n    const finalOptions = {\n      ...defaultOptions,\n      ...options,\n    };\n    return RNSecureStorage.getAllKeys(finalOptions);\n  },\n  getSupportedBiometryType() {\n    return RNSecureStorage.getSupportedBiometryType();\n  },\n  canCheckAuthentication(options: any) {\n    if (isAndroid) {\n      return RNSecureStorage.getSupportedBiometryType() !== null;\n    }\n    return RNSecureStorage.canCheckAuthentication(options);\n  },\n};\n"],"mappings":"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"}